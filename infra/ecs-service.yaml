AWSTemplateFormatVersion: "2010-09-09"
Description: Gallery ECS Cluster, Fargate Service with ALB and Auto Scaling

Parameters:
  AppName:
    Type: String
  ECRImageUri:
    Type: String
  VPCId:
    Type: AWS::EC2::VPC::Id
  PublicSubnet1:
    Type: AWS::EC2::Subnet::Id
  PublicSubnet2:
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet1:
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2:
    Type: AWS::EC2::Subnet::Id
  S3BucketName:
    Description: "Name of the S3 bucket for images"
    Type: String
  VPCEndpointSG:
    Description: "Security Group for VPC endpoints"
    Type: AWS::EC2::SecurityGroup::Id
  ECSSecurityGroup:
    Description: "Security Group for ECS task"
    Type: AWS::EC2::SecurityGroup::Id
  ALBSecurityGroup:
    Description: "Security Group for Application Load Balancer"
    Type: AWS::EC2::SecurityGroup::Id
  LabTag:
    Type: String

Resources:
  # Gallery ECS Autoscaling Role
  GalleryECSAutoScalingRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: application-autoscaling.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceAutoscaleRole
      Policies:
        - PolicyName: !Sub ${AppName}-ecs-autoscaling-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "application-autoscaling:*"
                  - "cloudwatch:DescribeAlarms"
                  - "cloudwatch:PutMetricAlarm"
                  - "ecs:DescribeServices"
                  - "ecs:UpdateService"
                  - "logs:PutLogEvents"
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                Resource: "*"
      Tags:
        - Key: Name
          Value: !Sub ${AppName}-ecs-autoscaling-role
        - Key: Lab
          Value: !Ref LabTag

  # Gallery ECS Task Execution Role
  GalleryTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AppName}-ecs-task-execution-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${AppName}-ECRAccessPolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:DescribeRepositories
                  - ecr:ListImages
                  - ecr:DescribeImages
                Resource: "*"

        - PolicyName: !Sub ${AppName}-S3AccessPolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:DeleteObject
                  - s3:ListBucket
                  - s3:CreateBucket
                Resource:
                  - !Sub arn:aws:s3:::${S3BucketName}
                  - !Sub arn:aws:s3:::${S3BucketName}/*

        - PolicyName: !Sub ${AppName}-SSMAccessPolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                  - ssm:GetParametersByPath
                Resource:
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AppName}/db/*
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AppName}/image-uri/

        - PolicyName: !Sub ${AppName}-LoggingAccess
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:CreateLogGroup
                  - logs:DescribeLogStreams
                Resource: "*"
      Tags:
        - Key: Name
          Value: !Sub ${AppName}-task-exec-role
        - Key: Lab
          Value: !Ref LabTag

  # Gallery Elastic Container Service (ECS) Cluster
  GalleryECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub ${AppName}-ecs-cluster
      ClusterSettings:
        - Name: containerInsights
          Value: enabled
      Tags:
        - Key: Name
          Value: !Sub ${AppName}-ecs-cluster
        - Key: Lab
          Value: !Ref LabTag

  # Gallery Application Load Balancer
  GalleryLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ${AppName}-alb
      Scheme: internet-facing
      Type: application
      IpAddressType: ipv4
      Subnets: [!Ref PublicSubnet1, !Ref PublicSubnet2]
      SecurityGroups: [!Ref ALBSecurityGroup]
      Tags:
        - Key: Name
          Value: !Sub ${AppName}-alb
        - Key: Lab
          Value: !Ref LabTag

  # Gallery Load Balancer Target Group
  GalleryTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${AppName}-blue-tg
      Port: 8081
      Protocol: HTTP
      VpcId: !Ref VPCId
      TargetType: ip
      HealthCheckPath: /actuator/health
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 3
      UnhealthyThresholdCount: 3
      Matcher:
        HttpCode: 200-299
      Tags:
        - Key: Name
          Value: !Sub ${AppName}-btg
        - Key: Lab
          Value: !Ref LabTag

  # For blue/green codedeploy
  GalleryTargetGroup2:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${AppName}-green-tg
      Port: 8081
      Protocol: HTTP
      VpcId: !Ref VPCId
      TargetType: ip
      HealthCheckPath: /actuator/health
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 3
      UnhealthyThresholdCount: 3
      Matcher:
        HttpCode: 200-299
      Tags:
        - Key: Name
          Value: !Sub ${AppName}-gtg
        -